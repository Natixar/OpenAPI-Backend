# coding: utf-8

"""
    API B2B ADICT V2

    Cette API vous permet de gérer vos droits d'accès aux données des PCE et de consulter leurs données contractuelles, techniques, de consommation publiées / informatives et d'injections publiées.  # noqa: E501

    The version of the OpenAPI document: v2
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from grdf_client import schemas  # noqa: F401


class ListeAccesOut(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    liste des droits d'accès retournée par le service `/consulter_acces`
    """


    class MetaOapg:
        
        class properties:
            id_droit_acces = schemas.StrSchema
            id_pce = schemas.StrSchema
            
            
            class role_tiers(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "AUTORISE_CONTRAT_FOURNITURE": "AUTORISE_CONTRAT_FOURNITURE",
                        "DETENTEUR_CONTRAT_FOURNITURE, AUTORISE_CONTRAT_INJECTION": "DETENTEUR_CONTRAT_FOURNITURE_AUTORISE_CONTRAT_INJECTION",
                        "DETENTEUR_CONTRAT_INJECTION": "DETENTEUR_CONTRAT_INJECTION",
                    }
                
                @schemas.classproperty
                def AUTORISE_CONTRAT_FOURNITURE(cls):
                    return cls("AUTORISE_CONTRAT_FOURNITURE")
                
                @schemas.classproperty
                def DETENTEUR_CONTRAT_FOURNITURE_AUTORISE_CONTRAT_INJECTION(cls):
                    return cls("DETENTEUR_CONTRAT_FOURNITURE, AUTORISE_CONTRAT_INJECTION")
                
                @schemas.classproperty
                def DETENTEUR_CONTRAT_INJECTION(cls):
                    return cls("DETENTEUR_CONTRAT_INJECTION")
            raison_sociale_du_tiers = schemas.StrSchema
            nom_titulaire = schemas.StrSchema
            raison_sociale_du_titulaire = schemas.StrSchema
            courriel_titulaire = schemas.StrSchema
            numero_telephone_mobile_titulaire = schemas.StrSchema
            code_postal = schemas.StrSchema
            date_debut_droit_acces = schemas.DateSchema
            date_fin_droit_acces = schemas.DateSchema
            perim_donnees_conso_debut = schemas.DateSchema
            perim_donnees_conso_fin = schemas.DateSchema
            perim_donnees_inj_debut = schemas.DateSchema
            perim_donnees_inj_fin = schemas.DateSchema
            perim_donnees_contractuelles = schemas.StrSchema
            perim_donnees_techniques = schemas.StrSchema
            perim_donnees_informatives = schemas.StrSchema
            perim_donnees_publiees = schemas.StrSchema
            date_creation = schemas.DateTimeSchema
            etat_droit_acces = schemas.StrSchema
            date_revocation = schemas.DateTimeSchema
            source_revocation = schemas.StrSchema
            date_passage_a_obsolete = schemas.DateTimeSchema
            source_passage_a_obsolete = schemas.StrSchema
            date_passage_a_refuse = schemas.DateTimeSchema
            source_passage_a_refuse = schemas.StrSchema
            parcours = schemas.StrSchema
            statut_controle_preuve = schemas.StrSchema
            date_limite_transmission_preuve = schemas.DateSchema
            __annotations__ = {
                "id_droit_acces": id_droit_acces,
                "id_pce": id_pce,
                "role_tiers": role_tiers,
                "raison_sociale_du_tiers": raison_sociale_du_tiers,
                "nom_titulaire": nom_titulaire,
                "raison_sociale_du_titulaire": raison_sociale_du_titulaire,
                "courriel_titulaire": courriel_titulaire,
                "numero_telephone_mobile_titulaire": numero_telephone_mobile_titulaire,
                "code_postal": code_postal,
                "date_debut_droit_acces": date_debut_droit_acces,
                "date_fin_droit_acces": date_fin_droit_acces,
                "perim_donnees_conso_debut": perim_donnees_conso_debut,
                "perim_donnees_conso_fin": perim_donnees_conso_fin,
                "perim_donnees_inj_debut": perim_donnees_inj_debut,
                "perim_donnees_inj_fin": perim_donnees_inj_fin,
                "perim_donnees_contractuelles": perim_donnees_contractuelles,
                "perim_donnees_techniques": perim_donnees_techniques,
                "perim_donnees_informatives": perim_donnees_informatives,
                "perim_donnees_publiees": perim_donnees_publiees,
                "date_creation": date_creation,
                "etat_droit_acces": etat_droit_acces,
                "date_revocation": date_revocation,
                "source_revocation": source_revocation,
                "date_passage_a_obsolete": date_passage_a_obsolete,
                "source_passage_a_obsolete": source_passage_a_obsolete,
                "date_passage_a_refuse": date_passage_a_refuse,
                "source_passage_a_refuse": source_passage_a_refuse,
                "parcours": parcours,
                "statut_controle_preuve": statut_controle_preuve,
                "date_limite_transmission_preuve": date_limite_transmission_preuve,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id_droit_acces"]) -> MetaOapg.properties.id_droit_acces: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id_pce"]) -> MetaOapg.properties.id_pce: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["role_tiers"]) -> MetaOapg.properties.role_tiers: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["raison_sociale_du_tiers"]) -> MetaOapg.properties.raison_sociale_du_tiers: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nom_titulaire"]) -> MetaOapg.properties.nom_titulaire: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["raison_sociale_du_titulaire"]) -> MetaOapg.properties.raison_sociale_du_titulaire: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["courriel_titulaire"]) -> MetaOapg.properties.courriel_titulaire: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["numero_telephone_mobile_titulaire"]) -> MetaOapg.properties.numero_telephone_mobile_titulaire: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["code_postal"]) -> MetaOapg.properties.code_postal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_debut_droit_acces"]) -> MetaOapg.properties.date_debut_droit_acces: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_fin_droit_acces"]) -> MetaOapg.properties.date_fin_droit_acces: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perim_donnees_conso_debut"]) -> MetaOapg.properties.perim_donnees_conso_debut: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perim_donnees_conso_fin"]) -> MetaOapg.properties.perim_donnees_conso_fin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perim_donnees_inj_debut"]) -> MetaOapg.properties.perim_donnees_inj_debut: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perim_donnees_inj_fin"]) -> MetaOapg.properties.perim_donnees_inj_fin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perim_donnees_contractuelles"]) -> MetaOapg.properties.perim_donnees_contractuelles: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perim_donnees_techniques"]) -> MetaOapg.properties.perim_donnees_techniques: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perim_donnees_informatives"]) -> MetaOapg.properties.perim_donnees_informatives: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perim_donnees_publiees"]) -> MetaOapg.properties.perim_donnees_publiees: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_creation"]) -> MetaOapg.properties.date_creation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["etat_droit_acces"]) -> MetaOapg.properties.etat_droit_acces: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_revocation"]) -> MetaOapg.properties.date_revocation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source_revocation"]) -> MetaOapg.properties.source_revocation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_passage_a_obsolete"]) -> MetaOapg.properties.date_passage_a_obsolete: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source_passage_a_obsolete"]) -> MetaOapg.properties.source_passage_a_obsolete: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_passage_a_refuse"]) -> MetaOapg.properties.date_passage_a_refuse: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source_passage_a_refuse"]) -> MetaOapg.properties.source_passage_a_refuse: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["parcours"]) -> MetaOapg.properties.parcours: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statut_controle_preuve"]) -> MetaOapg.properties.statut_controle_preuve: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_limite_transmission_preuve"]) -> MetaOapg.properties.date_limite_transmission_preuve: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id_droit_acces", "id_pce", "role_tiers", "raison_sociale_du_tiers", "nom_titulaire", "raison_sociale_du_titulaire", "courriel_titulaire", "numero_telephone_mobile_titulaire", "code_postal", "date_debut_droit_acces", "date_fin_droit_acces", "perim_donnees_conso_debut", "perim_donnees_conso_fin", "perim_donnees_inj_debut", "perim_donnees_inj_fin", "perim_donnees_contractuelles", "perim_donnees_techniques", "perim_donnees_informatives", "perim_donnees_publiees", "date_creation", "etat_droit_acces", "date_revocation", "source_revocation", "date_passage_a_obsolete", "source_passage_a_obsolete", "date_passage_a_refuse", "source_passage_a_refuse", "parcours", "statut_controle_preuve", "date_limite_transmission_preuve", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id_droit_acces"]) -> typing.Union[MetaOapg.properties.id_droit_acces, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id_pce"]) -> typing.Union[MetaOapg.properties.id_pce, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["role_tiers"]) -> typing.Union[MetaOapg.properties.role_tiers, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["raison_sociale_du_tiers"]) -> typing.Union[MetaOapg.properties.raison_sociale_du_tiers, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nom_titulaire"]) -> typing.Union[MetaOapg.properties.nom_titulaire, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["raison_sociale_du_titulaire"]) -> typing.Union[MetaOapg.properties.raison_sociale_du_titulaire, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["courriel_titulaire"]) -> typing.Union[MetaOapg.properties.courriel_titulaire, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["numero_telephone_mobile_titulaire"]) -> typing.Union[MetaOapg.properties.numero_telephone_mobile_titulaire, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["code_postal"]) -> typing.Union[MetaOapg.properties.code_postal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_debut_droit_acces"]) -> typing.Union[MetaOapg.properties.date_debut_droit_acces, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_fin_droit_acces"]) -> typing.Union[MetaOapg.properties.date_fin_droit_acces, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perim_donnees_conso_debut"]) -> typing.Union[MetaOapg.properties.perim_donnees_conso_debut, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perim_donnees_conso_fin"]) -> typing.Union[MetaOapg.properties.perim_donnees_conso_fin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perim_donnees_inj_debut"]) -> typing.Union[MetaOapg.properties.perim_donnees_inj_debut, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perim_donnees_inj_fin"]) -> typing.Union[MetaOapg.properties.perim_donnees_inj_fin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perim_donnees_contractuelles"]) -> typing.Union[MetaOapg.properties.perim_donnees_contractuelles, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perim_donnees_techniques"]) -> typing.Union[MetaOapg.properties.perim_donnees_techniques, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perim_donnees_informatives"]) -> typing.Union[MetaOapg.properties.perim_donnees_informatives, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perim_donnees_publiees"]) -> typing.Union[MetaOapg.properties.perim_donnees_publiees, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_creation"]) -> typing.Union[MetaOapg.properties.date_creation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["etat_droit_acces"]) -> typing.Union[MetaOapg.properties.etat_droit_acces, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_revocation"]) -> typing.Union[MetaOapg.properties.date_revocation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source_revocation"]) -> typing.Union[MetaOapg.properties.source_revocation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_passage_a_obsolete"]) -> typing.Union[MetaOapg.properties.date_passage_a_obsolete, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source_passage_a_obsolete"]) -> typing.Union[MetaOapg.properties.source_passage_a_obsolete, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_passage_a_refuse"]) -> typing.Union[MetaOapg.properties.date_passage_a_refuse, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source_passage_a_refuse"]) -> typing.Union[MetaOapg.properties.source_passage_a_refuse, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["parcours"]) -> typing.Union[MetaOapg.properties.parcours, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statut_controle_preuve"]) -> typing.Union[MetaOapg.properties.statut_controle_preuve, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_limite_transmission_preuve"]) -> typing.Union[MetaOapg.properties.date_limite_transmission_preuve, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id_droit_acces", "id_pce", "role_tiers", "raison_sociale_du_tiers", "nom_titulaire", "raison_sociale_du_titulaire", "courriel_titulaire", "numero_telephone_mobile_titulaire", "code_postal", "date_debut_droit_acces", "date_fin_droit_acces", "perim_donnees_conso_debut", "perim_donnees_conso_fin", "perim_donnees_inj_debut", "perim_donnees_inj_fin", "perim_donnees_contractuelles", "perim_donnees_techniques", "perim_donnees_informatives", "perim_donnees_publiees", "date_creation", "etat_droit_acces", "date_revocation", "source_revocation", "date_passage_a_obsolete", "source_passage_a_obsolete", "date_passage_a_refuse", "source_passage_a_refuse", "parcours", "statut_controle_preuve", "date_limite_transmission_preuve", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id_droit_acces: typing.Union[MetaOapg.properties.id_droit_acces, str, schemas.Unset] = schemas.unset,
        id_pce: typing.Union[MetaOapg.properties.id_pce, str, schemas.Unset] = schemas.unset,
        role_tiers: typing.Union[MetaOapg.properties.role_tiers, str, schemas.Unset] = schemas.unset,
        raison_sociale_du_tiers: typing.Union[MetaOapg.properties.raison_sociale_du_tiers, str, schemas.Unset] = schemas.unset,
        nom_titulaire: typing.Union[MetaOapg.properties.nom_titulaire, str, schemas.Unset] = schemas.unset,
        raison_sociale_du_titulaire: typing.Union[MetaOapg.properties.raison_sociale_du_titulaire, str, schemas.Unset] = schemas.unset,
        courriel_titulaire: typing.Union[MetaOapg.properties.courriel_titulaire, str, schemas.Unset] = schemas.unset,
        numero_telephone_mobile_titulaire: typing.Union[MetaOapg.properties.numero_telephone_mobile_titulaire, str, schemas.Unset] = schemas.unset,
        code_postal: typing.Union[MetaOapg.properties.code_postal, str, schemas.Unset] = schemas.unset,
        date_debut_droit_acces: typing.Union[MetaOapg.properties.date_debut_droit_acces, str, date, schemas.Unset] = schemas.unset,
        date_fin_droit_acces: typing.Union[MetaOapg.properties.date_fin_droit_acces, str, date, schemas.Unset] = schemas.unset,
        perim_donnees_conso_debut: typing.Union[MetaOapg.properties.perim_donnees_conso_debut, str, date, schemas.Unset] = schemas.unset,
        perim_donnees_conso_fin: typing.Union[MetaOapg.properties.perim_donnees_conso_fin, str, date, schemas.Unset] = schemas.unset,
        perim_donnees_inj_debut: typing.Union[MetaOapg.properties.perim_donnees_inj_debut, str, date, schemas.Unset] = schemas.unset,
        perim_donnees_inj_fin: typing.Union[MetaOapg.properties.perim_donnees_inj_fin, str, date, schemas.Unset] = schemas.unset,
        perim_donnees_contractuelles: typing.Union[MetaOapg.properties.perim_donnees_contractuelles, str, schemas.Unset] = schemas.unset,
        perim_donnees_techniques: typing.Union[MetaOapg.properties.perim_donnees_techniques, str, schemas.Unset] = schemas.unset,
        perim_donnees_informatives: typing.Union[MetaOapg.properties.perim_donnees_informatives, str, schemas.Unset] = schemas.unset,
        perim_donnees_publiees: typing.Union[MetaOapg.properties.perim_donnees_publiees, str, schemas.Unset] = schemas.unset,
        date_creation: typing.Union[MetaOapg.properties.date_creation, str, datetime, schemas.Unset] = schemas.unset,
        etat_droit_acces: typing.Union[MetaOapg.properties.etat_droit_acces, str, schemas.Unset] = schemas.unset,
        date_revocation: typing.Union[MetaOapg.properties.date_revocation, str, datetime, schemas.Unset] = schemas.unset,
        source_revocation: typing.Union[MetaOapg.properties.source_revocation, str, schemas.Unset] = schemas.unset,
        date_passage_a_obsolete: typing.Union[MetaOapg.properties.date_passage_a_obsolete, str, datetime, schemas.Unset] = schemas.unset,
        source_passage_a_obsolete: typing.Union[MetaOapg.properties.source_passage_a_obsolete, str, schemas.Unset] = schemas.unset,
        date_passage_a_refuse: typing.Union[MetaOapg.properties.date_passage_a_refuse, str, datetime, schemas.Unset] = schemas.unset,
        source_passage_a_refuse: typing.Union[MetaOapg.properties.source_passage_a_refuse, str, schemas.Unset] = schemas.unset,
        parcours: typing.Union[MetaOapg.properties.parcours, str, schemas.Unset] = schemas.unset,
        statut_controle_preuve: typing.Union[MetaOapg.properties.statut_controle_preuve, str, schemas.Unset] = schemas.unset,
        date_limite_transmission_preuve: typing.Union[MetaOapg.properties.date_limite_transmission_preuve, str, date, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ListeAccesOut':
        return super().__new__(
            cls,
            *args,
            id_droit_acces=id_droit_acces,
            id_pce=id_pce,
            role_tiers=role_tiers,
            raison_sociale_du_tiers=raison_sociale_du_tiers,
            nom_titulaire=nom_titulaire,
            raison_sociale_du_titulaire=raison_sociale_du_titulaire,
            courriel_titulaire=courriel_titulaire,
            numero_telephone_mobile_titulaire=numero_telephone_mobile_titulaire,
            code_postal=code_postal,
            date_debut_droit_acces=date_debut_droit_acces,
            date_fin_droit_acces=date_fin_droit_acces,
            perim_donnees_conso_debut=perim_donnees_conso_debut,
            perim_donnees_conso_fin=perim_donnees_conso_fin,
            perim_donnees_inj_debut=perim_donnees_inj_debut,
            perim_donnees_inj_fin=perim_donnees_inj_fin,
            perim_donnees_contractuelles=perim_donnees_contractuelles,
            perim_donnees_techniques=perim_donnees_techniques,
            perim_donnees_informatives=perim_donnees_informatives,
            perim_donnees_publiees=perim_donnees_publiees,
            date_creation=date_creation,
            etat_droit_acces=etat_droit_acces,
            date_revocation=date_revocation,
            source_revocation=source_revocation,
            date_passage_a_obsolete=date_passage_a_obsolete,
            source_passage_a_obsolete=source_passage_a_obsolete,
            date_passage_a_refuse=date_passage_a_refuse,
            source_passage_a_refuse=source_passage_a_refuse,
            parcours=parcours,
            statut_controle_preuve=statut_controle_preuve,
            date_limite_transmission_preuve=date_limite_transmission_preuve,
            _configuration=_configuration,
            **kwargs,
        )
